{"version":3,"sources":["components/common/FormsControl/FormsControl.js","components/common/FormsControl/FormsControl.module.css","utils/validators/validators.js","components/Login/Login.jsx"],"names":["FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validate","component","text","module","exports","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","captchaUrl","onSubmit","type","src","formSummaryError","connect","state","auth","isAuth","login","logout","to","formData","email","password","rememberMe","captcha"],"mappings":"iUAKaA,EAAc,SAAC,GAAkD,EAAhDC,MAAiD,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SACxDC,EAAWH,GAAWC,EAC5B,OACC,sBAAKG,UAAWC,IAAEC,YAAc,KAAOH,EAAWE,IAAEJ,MAAQ,IAA5D,UACC,8BACEC,IAEDC,GAAY,+BAAOF,QAMVM,EAAW,SAACC,GACxB,IAAQV,EAAqCU,EAArCV,MAAuBW,GAAcD,EAA9BT,KAA8BS,EAAxBE,MAArB,YAA6CF,EAA7C,IACA,OAAO,cAACX,EAAD,2BAAiBW,GAAjB,aAAwB,oDAAcV,GAAWW,QAG5CE,EAAQ,SAACH,GACrB,IAAQV,EAAqCU,EAArCV,MAAuBW,GAAcD,EAA9BT,KAA8BS,EAAxBE,MAArB,YAA6CF,EAA7C,IACA,OAAO,cAACX,EAAD,2BAAiBW,GAAjB,aAAwB,iDAAWV,GAAWW,QAGzCG,EAAc,SAACC,EAAaC,EAAMC,EAAUC,GAAsC,IAA3BR,EAA0B,uDAAlB,GAAIS,EAAc,uDAAP,GACtF,OAAO,gCACN,cAAC,IAAD,aAAOJ,YAAaA,EAAaC,KAAMA,EACtCC,SAAUA,EACVC,UAAWA,GACPR,IACFS,O,oBCjCLC,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,iCCDzH,oEAAO,IAAMC,EAAW,SAAAC,GACvB,IAAIA,EACJ,MAAO,qBAGKC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC/C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCN/B,2FAgCME,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EArBL,SAAC,GAAyC,IAAvCE,EAAsC,EAAtCA,aAAc3B,EAAwB,EAAxBA,MAAO4B,EAAiB,EAAjBA,WACzC,OACC,uBAAMC,SAAUF,EAAhB,UACEhB,YAAY,QAAS,QAAS,CAACQ,KAAWT,KAC1CC,YAAY,WAAY,WAAY,CAACQ,KAAWT,IAAO,CAAEoB,KAAM,aAC/DnB,YAAY,KAAM,aAAc,GAAID,IAAO,CAAEoB,KAAM,YAAc,eAEjEF,GAAc,qBAAKG,IAAKH,IACxBA,GAAcjB,YAAY,qBAAsB,UAAW,CAACQ,KAAWT,IAAO,IAE9EV,GAAS,qBAAKG,UAAWC,IAAE4B,iBAAlB,SACRhC,IAEF,8BACC,mDA+BWiC,uBALS,SAACC,GAAD,MAAY,CACnCN,WAAYM,EAAMC,KAAKP,WACvBQ,OAAQF,EAAMC,KAAKC,UAGoB,CAAEC,UAAOC,YAAlCL,EArBD,SAAC1B,GAKd,OAAIA,EAAM6B,OACF,cAAC,IAAD,CAAUG,GAAI,aAGf,gCACN,uCACA,cAACf,EAAD,CAAgBK,SATA,SAACW,GACjBjC,EAAM8B,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAQzChB,WAAYrB,EAAMqB","file":"static/js/7.b4f65ebf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from './FormsControl.module.css';\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\n\r\nexport const FormControl = ({ input, meta: { touched, error }, children }) => {\r\n\tconst hasError = touched && error;\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n\t\t\t<div>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t\t{hasError && <span>{error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n\tconst { input, meta, child, ...restProps } = props;\r\n\treturn <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>;\r\n}\r\n\r\nexport const Input = (props) => {\r\n\tconst { input, meta, child, ...restProps } = props;\r\n\treturn <FormControl {...props}><input {...input} {...restProps} /></FormControl>;\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = \"\") => {\r\n\treturn <div>\r\n\t\t<Field placeholder={placeholder} name={name}\r\n\t\t\tvalidate={validate}\r\n\t\t\tcomponent={component}\r\n\t\t\t{...props}\r\n\t\t/>{text}\r\n\t</div>\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__2Q_HW\",\"error\":\"FormsControl_error__3yYxs\",\"formSummaryError\":\"FormsControl_formSummaryError__1OOzH\"};","export const required = value => {\r\n\tif (value) return undefined;\r\n\treturn 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\tif (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\treturn undefined;\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { Input } from \"../common/FormsControl/FormsControl\";\r\nimport { login, logout } from \"../../redux/auth-reducer\";\r\nimport { Redirect } from \"react-router\";\r\nimport s from './../common/FormsControl/FormsControl.module.css';\r\nimport { createField } from \"../common/FormsControl/FormsControl\";\r\n\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t{createField(\"Login\", \"email\", [required], Input)}\r\n\t\t\t{createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n\t\t\t{createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n\r\n\t\t\t{captchaUrl && <img src={captchaUrl} />}\r\n\t\t\t{captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, { })}\r\n\r\n\t\t\t{error && <div className={s.formSummaryError}>\r\n\t\t\t\t{error}\r\n\t\t\t</div>}\r\n\t\t\t<div>\r\n\t\t\t\t<button>Login</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n};\r\n\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tprops.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n\t}\r\n\tif (props.isAuth) {\r\n\t\treturn <Redirect to={\"/profile\"} />\r\n\t}\r\n\r\n\treturn <div>\r\n\t\t<h1>LOGIN</h1>\r\n\t\t<LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n\t</div>\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcaptchaUrl: state.auth.captchaUrl,\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, logout })(Login);"],"sourceRoot":""}