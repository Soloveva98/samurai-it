{"version":3,"sources":["components/common/FormsControl/FormsControl.js","components/common/FormsControl/FormsControl.module.css","utils/validators/validators.js","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validate","component","text","module","exports","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","path","id","dialog","active","Message","message","maxlength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"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","file":"static/js/6.7ca413d0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from './FormsControl.module.css';\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\n\r\nexport const FormControl = ({ input, meta: { touched, error }, children }) => {\r\n\tconst hasError = touched && error;\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n\t\t\t<div>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t\t{hasError && <span>{error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n\tconst { input, meta, child, ...restProps } = props;\r\n\treturn <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>;\r\n}\r\n\r\nexport const Input = (props) => {\r\n\tconst { input, meta, child, ...restProps } = props;\r\n\treturn <FormControl {...props}><input {...input} {...restProps} /></FormControl>;\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = \"\") => {\r\n\treturn <div>\r\n\t\t<Field placeholder={placeholder} name={name}\r\n\t\t\tvalidate={validate}\r\n\t\t\tcomponent={component}\r\n\t\t\t{...props}\r\n\t\t/>{text}\r\n\t</div>\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__2Q_HW\",\"error\":\"FormsControl_error__3yYxs\",\"formSummaryError\":\"FormsControl_formSummaryError__1OOzH\"};","export const required = value => {\r\n\tif (value) return undefined;\r\n\treturn 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\tif (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\treturn undefined;\r\n}\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\t\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\treturn ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2WWPs\",\"dialogsItems\":\"Dialogs_dialogsItems__3Yj5O\",\"active\":\"Dialogs_active__tY0SG\",\"messages\":\"Dialogs_messages__3tvWy\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\tlet path = \"/dialogs/\" + props.id;\r\n\treturn (\r\n\t\t<div className={s.dialog + ' ' + s.active}>\r\n\t\t\t<NavLink to={path}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className={s.dialog}>{props.message}</div>\r\n\t)\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from '../common/FormsControl/FormsControl';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet state = props.dialogsPage;\r\n\r\n\tlet dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />\r\n\t);\r\n\r\n\tlet messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\tlet newMessageBody = state.newMessageBody;\r\n\r\n\tlet addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody);\r\n\t}\r\n\r\n\tif (!props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t<div>{messagesElements}</div>\r\n\t\t\t\t<AddMessageFormRedux onSubmit={addNewMessage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nconst maxlength50 = maxLengthCreator(50);\r\n\r\nconst addMessageForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field component={Textarea} validate={[required, maxlength50]} name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Send</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(addMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n\t)(Dialogs);"],"sourceRoot":""}